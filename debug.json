{"lines": [{"start": 0, "end": 21, "number": 0, "width": 21, "display": 1, "y": 0, "line_start": 0, "mid": 0, "index": 0, "line_end": 0}, {"start": 0, "end": 22, "number": 1, "width": 22, "display": 2, "y": 1, "line_start": 1, "mid": 0, "index": 1, "line_end": 1}, {"start": 0, "end": 22, "number": 2, "width": 22, "display": 3, "y": 2, "line_start": 2, "mid": 0, "index": 2, "line_end": 2}, {"start": 0, "end": 22, "number": 3, "width": 22, "display": 4, "y": 3, "line_start": 3, "mid": 0, "index": 3, "line_end": 3}, {"start": 0, "end": 0, "number": 4, "width": 0, "display": 5, "y": 4, "line_start": 4, "line_end": 4, "zero": 0, "index": 4}, {"start": 0, "end": 29, "number": 5, "width": 29, "display": 6, "y": 5, "line_start": 5, "mid": 0, "index": 5, "line_end": 5}, {"start": 0, "end": 29, "number": 6, "width": 29, "display": 7, "y": 6, "line_start": 6, "mid": 0, "index": 6, "line_end": 6}, {"start": 0, "end": 35, "number": 7, "width": 35, "display": 8, "y": 7, "line_start": 7, "mid": 0, "index": 7, "line_end": 7}, {"start": 0, "end": 0, "number": 8, "width": 0, "display": 9, "y": 8, "line_start": 8, "line_end": 8, "zero": 0, "index": 8}, {"start": 0, "end": 29, "number": 9, "width": 29, "display": 10, "y": 9, "line_start": 9, "mid": 0, "index": 9, "line_end": 9}, {"start": 0, "end": 0, "number": 10, "width": 0, "display": 11, "y": 10, "line_start": 10, "line_end": 10, "zero": 0, "index": 10}, {"start": 0, "end": 23, "number": 11, "width": 23, "display": 12, "y": 11, "line_start": 11, "mid": 0, "index": 11, "line_end": 11}, {"start": 0, "end": 55, "number": 12, "width": 55, "display": 13, "y": 12, "line_start": 12, "mid": 0, "index": 12, "line_end": 12}, {"start": 0, "end": 1, "number": 13, "width": 1, "display": 14, "y": 13, "line_start": 13, "mid": 0, "index": 13, "line_end": 13}, {"start": 0, "end": 0, "number": 14, "width": 0, "display": 15, "y": 14, "line_start": 14, "line_end": 14, "zero": 0, "index": 14}, {"start": 0, "end": 34, "number": 15, "width": 34, "display": 16, "y": 15, "line_start": 15, "mid": 0, "index": 15, "line_end": 15}, {"start": 0, "end": 14, "number": 16, "width": 14, "display": 17, "y": 16, "line_start": 16, "mid": 0, "index": 16, "line_end": 16}, {"start": 0, "end": 36, "number": 17, "width": 36, "display": 18, "y": 17, "line_start": 17, "mid": 0, "index": 17, "line_end": 17}, {"start": 0, "end": 37, "number": 18, "width": 37, "display": 19, "y": 18, "line_start": 18, "mid": 0, "index": 18, "line_end": 18}, {"start": 0, "end": 38, "number": 19, "width": 38, "display": 20, "y": 19, "line_start": 19, "mid": 0, "index": 19, "line_end": 19}, {"start": 0, "end": 35, "number": 20, "width": 35, "display": 21, "y": 20, "line_start": 20, "mid": 0, "index": 20, "line_end": 20}, {"start": 0, "end": 0, "number": 21, "width": 0, "display": 22, "y": 21, "line_start": 21, "line_end": 21, "zero": 0, "index": 21}, {"start": 0, "end": 0, "number": 22, "width": 0, "display": 23, "y": 22, "line_start": 22, "line_end": 22, "zero": 0, "index": 22}, {"start": 0, "end": 0, "number": 23, "width": 0, "display": 24, "y": 23, "line_start": 23, "line_end": 23, "zero": 0, "index": 23}, {"start": 0, "end": 0, "number": 24, "width": 0, "display": 25, "y": 24, "line_start": 24, "line_end": 24, "zero": 0, "index": 24}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 25, "line_start": 25, "line_end": 25, "index": 25}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 26, "line_start": 26, "line_end": 26, "index": 26}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 27, "line_start": 27, "line_end": 27, "index": 27}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 28, "line_start": 28, "line_end": 28, "index": 28}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 29, "line_start": 29, "line_end": 29, "index": 29}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 30, "line_start": 30, "line_end": 30, "index": 30}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 31, "line_start": 31, "line_end": 31, "index": 31}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 32, "line_start": 32, "line_end": 32, "index": 32}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 33, "line_start": 33, "line_end": 33, "index": 33}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 34, "line_start": 34, "line_end": 34, "index": 34}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 35, "line_start": 35, "line_end": 35, "index": 35}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 36, "line_start": 36, "line_end": 36, "index": 36}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 37, "line_start": 37, "line_end": 37, "index": 37}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 38, "line_start": 38, "line_end": 38, "index": 38}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 39, "line_start": 39, "line_end": 39, "index": 39}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 40, "line_start": 40, "line_end": 40, "index": 40}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 41, "line_start": 41, "line_end": 41, "index": 41}, {"start": null, "end": null, "number": null, "width": 0, "display": "~", "y": 42, "line_start": 42, "line_end": 42, "index": 42}], "line": {"start": 0, "end": 0, "number": 24, "width": 0, "display": 25, "y": 24, "line_start": 24, "line_end": 24, "zero": 0, "index": 24}, "number": 24, "width": 74, "height": 18, "text": ["#include    <stdio.h>", "#include    <stdint.h>", "#include    <stdlib.h>", "#include    <string.h>", "", "#include    \"headers/stack.h\"", "#include    \"headers/parse.h\"", "#include    \"headers/expressions.h\"", "", "const int16_t MATCH_FAIL =-1;", "", "void parse(char *text){", "    uint16_t  res=core_parse(text,EXP_QUERIES,0,0,0,0);", "}", "", "const char * get_type(uint16_t t){", "    switch(t){", "        case TYP_CHR: return \"CHAR\";", "        case TYP_GRP: return \"GROUP\";", "        case TYP_NEG: return \"NEGATE\";", "        case TYP_NOT: return \"NOT\";", "", "", "", ""]}